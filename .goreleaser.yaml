# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 1

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy

builds:
  - binary: treblle
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
      - freebsd
    goarm:
      - 6
      - 7
    goamd64:
      - v2
      - v3

release:
  prerelease: auto

brews:
  -
    name: treblle
    homepage: "https://github.com/Treblle/treblle-cli"
    repository:
      owner: Treblle
      name: homebrew-treblle
    commit_author:
      name: Steve McDougall
      email: steve@treblle.com

chocolateys:
  - name: treblle
    title: Treblle CLI
    authors: Treblle
    project_url: https://github.com/treblle/treblle-cli
    url_template: "https://github.com/treblle/treblle-cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    copyright: 2024 Treblle
    license_url: https://github.com/treblle/treblle-cli/blob/main/LICENSE
    project_source_url: https://github.com/treblle/treblle-cli
    docs_url: https://docs.treblle.com/tools/cli
    bug_tracker_url: https://github.com/treblle/treblle-cli/issues
    tags: openapi api insights api-insights api-testing api-performance api-security api-quality
    summary: API Insights scores your API using over 30 tests taken from standards and industry best practices across three categories; Performance, Quality, & Security
    description: |-
      API Insights scores your API using over 30 tests taken from standards and industry best practices across three categories:

      - **Design**: how well your API is structured. Is it a well-crafted ship, ready to withstand the rough seas of user demands and scalability?

      - **Performance**: does your API respond quickly? It's like checking the wind in your sails â€“ are you moving swiftly and smoothly?

      - **Security**: how safe and secure is your API? It's akin to having a strong hull to protect against the stormy seas of cyber threats.
    release_notes: "https://github.com/treblle/treblle-cli/releases/tag/v{{ .Version }}"
    api_key: "{{ secrets.CHOCOLATEY_API_KEY }}"
    source_repo: "https://push.chocolatey.org/"

checksum:
  name_template: 'checksums.txt'

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_{{ title .Os }}_{{ .Version }}_{{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}_v{{ .Arm }}{{ end }}
      {{- if .Goamd64 }}_{{ .Goamd64 }}{{ end }} # Includes goamd64 version
      {{- if .Goarch }}_{{ .Goarch }}{{ end }}   # Includes goarch version

    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"